plot(1:10, main = "Colors and shapes")
axis(side = 1, font = 2, col = "blue", cex=4)
par(mfrow=c(2,4))
plot(1:10)
plot(1:10, axes = F, main = "No axes")
plot(1:10, xaxt="n", main = "No x axis")
plot(1:10, main = "Standard, but created \nvia separate layer")
axis(side = 1, at = 1:10, labels = 1:10, tick = T, line = 0)
plot(1:10, main = "Colors and shapes", axes = F)
axis(side = 1, font = 2, col = "blue", cex=4)
axis(side = 2, font = 3, col = "red", cex=10)
par(mfrow=c(2,4))
plot(1:10)
plot(1:10, axes = F, main = "No axes")
plot(1:10, xaxt="n", main = "No x axis")
plot(1:10, main = "Standard, but created \nvia separate layer")
axis(side = 1, at = 1:10, labels = 1:10, tick = T, line = 0)
plot(1:10, main = "Colors and shapes", axes = F)
axis(side = 1, font = 2, col = "blue", cex.axis=4)
axis(side = 2, font = 3, col = "red")
plot(1:10, main = "")
plot(1:10, bty="l")
par(mfrow=c(2,4))
plot(1:10)
plot(1:10, axes = F, main = "No axes")
plot(1:10, xaxt="n", main = "No x axis")
plot(1:10, main = "Standard, but created \nvia separate layer")
axis(side = 1, at = 1:10, labels = 1:10, tick = T, line = 0)
plot(1:10, main = "Colors and shapes", axes = F)
axis(side = 1, font = 2, col = "blue", cex.axis=4)
axis(side = 2, font = 3, col = "red")
plot(1:10, bty="7")
knitr::opts_chunk$set(echo = TRUE)
LOBdata <- read.csv("~/Desktop/LOBset.csv")
LOBdata <- read.csv("~/Desktop/LOBsetPos.csv")
```{r loaddata, cache=T}
LOBdata <- read.csv("~/Desktop/LOBsetPos.csv")
head(LOBdata)
grep("H2O", names(LOBdata))
grep("Orbi", names(LOBdata))
names(LOBdata)
LOBdata <- read.csv("~/Desktop/LOBsetPos.csv")
#Which columns are the data in?
datacols <- 12:29
compoundcol <- 43
speciescol <- 37
classcol <- 36
rtcol <- 5
mzcol <- 2
simpleLOBdata <- LOBdata[c(36, 37, 43, 5, 2, 12:29),]
head(simpleLOBdata)
LOBdata[1,]
LOBdata[2,]
simpleLOBdata <- LOBdata[,c(36, 37, 43, 5, 2, 12:29)]
head(simpleLOBdata)
LOBdata <- read.csv("~/Desktop/LOBsetPos.csv")
#Which columns are the data in?
datacols <- 12:29
compoundcol <- 43
speciescol <- 37
classcol <- 36
rtcol <- 5
mzcol <- 2
simpleLOBdata <- LOBdata[,c(36, 37, 43, 5, 2, 12:29)]
head(simpleLOBdata)
names(simpleLOBdata) <- c("Lipid_Class", "Lipid_Species", "Lipid_Compound", "Retention_time", "M/Z ratio",
paste("Sample", 1:18))
simpleLOBdata
head(simpleLOBdata)
names(LOBdata)
justSamples <- simpleLOBdata[,6:25]
justSamples <- simpleLOBdata[,6:24]
justSamples <- simpleLOBdata[,6:23]
head(justSamples)
tJustSamples <- t(justSamples)
boxplot(tJustSamples)
tJustSamples <- log(t(justSamples))
boxplot(tJustSamples)
tJustSamples <- log(t(head(justSamples)))
boxplot(tJustSamples)
tJustSamples <- log(t(head(justSamples, 100)))
boxplot(tJustSamples)
tJustSamples <- log10(t(head(justSamples, 100)))
boxplot(tJustSamples)
?boxplot
tJustSamples <- log10(t(head(justSamples, 100)))
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
ylab = "Log base 10 of the intensity values", xlab="Row number",
horizontal=T)
tJustSamples <- log10(t(head(justSamples, 100)))
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
ylab = "Log base 10 of the intensity values", xlab="Row number",
horizontal=T, ylim=c(100,0))
tJustSamples <- log10(t(head(justSamples, 100)))
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
ylab = "Log base 10 of the intensity values", xlab="Row number",
horizontal=T, xlim=c(100,0))
tJustSamples <- log10(t(head(justSamples, 100)))
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="Row number",
horizontal=T, xlim=c(100,0))
tJustSamples <- log10(t(head(justSamples, 100)))
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="Row number",
horizontal=T, xlim=c(100,0), las=1, outcol="red", col="grey90")
tJustSamples <- log10(t(head(justSamples, 100)))
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="Row number",
horizontal=T, xlim=c(100,0), las=1, outcol="red", col="grey90")
head(tJustSamples)
tJustSamples <- log10(t(head(justSamples, 100)))
rownames(tJustSamples) <- simpleLOBdata$Lipid_Compound[1:100]
rownames(tJustSamples)
colnames(tJustSamples) <- simpleLOBdata$Lipid_Compound[1:100]
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="Row number",
horizontal=T, xlim=c(100,0), las=1, outcol="red", col="grey90")
tJustSamples <- log10(t(head(justSamples, 100)))
colnames(tJustSamples) <- simpleLOBdata$Lipid_Compound[1:100]
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="Row number",
horizontal=T, xlim=c(100,0), las=1, outcol="red", col="grey90")
tJustSamples <- log10(t(head(justSamples, 100)))
colnames(tJustSamples) <- simpleLOBdata$Lipid_Compound[1:100]
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="Row number",
horizontal=T, xlim=c(100,0), las=1, outcol="red", col="grey90")
tJustSamples <- log10(t(head(justSamples, 100)))
colnames(tJustSamples) <- simpleLOBdata$Lipid_Compound[1:100]
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="Row number",
horizontal=T, xlim=c(100,0), las=1, outcol="red", col="grey90")
par(mar)
par(mar())
par(mar=c(5.1, 8.1, 2.1, 2.1))
tJustSamples <- log10(t(head(justSamples, 100)))
colnames(tJustSamples) <- simpleLOBdata$Lipid_Compound[1:100]
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="Row number",
horizontal=T, xlim=c(100,0), las=1, outcol="red", col="grey90")
par(mar=c(5.1, 10.1, 2.1, 2.1))
tJustSamples <- log10(t(head(justSamples, 100)))
colnames(tJustSamples) <- simpleLOBdata$Lipid_Compound[1:100]
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="Row number",
horizontal=T, xlim=c(100,0), las=1, outcol="red", col="grey90")
par(mar=c(5.1, 10.1, 2.1, 2.1))
tJustSamples <- log10(t(head(justSamples, 100)))
colnames(tJustSamples) <- simpleLOBdata$Lipid_Compound[1:100]
boxplot(tJustSamples, main = "What do the first 100 rows look like?",
xlab = "Log base 10 of the intensity values", ylab="",
horizontal=T, xlim=c(100,0), las=1, outcol="red", col="grey90")
library(dplyr)
library(ggplot)
#Read in the data
LOBdata <- read.csv("~/Desktop/LOBsetPos.csv")
View(LOBdata)
names(LOBdata)
View(LOBdata)
# Get rid of low-confidence compounds
##Make a new column with the sum of the first three "C" columns
LOBdata <- mutate(LOBdata, "ConfInt"=sum(C1, C1x, C2a))
#Read in the data
LOBdata <- read.csv("~/Desktop/LOBsetPos.csv")
# Get rid of low-confidence compounds
##Make a new column with the sum of the first three "C" columns
LOBdata <- mutate(LOBdata, "ConfInt"=sum(C1, C1x, C2a))
View(LOBdata)
sum ("a", "b")
sum ("2", "3")
# Get rid of low-confidence compounds
##Make a new column with the sum of the first three "C" columns
LOBdata <- mutate(LOBdata, ConfInt=sum(C1, C1x, C2a))
# Get rid of low-confidence compounds
##Make a new column with the sum of the first three "C" columns
LOBdata <- mutate(LOBdata, ConfInt=sum("C1", "C1x", "C2a"))
# Get rid of low-confidence compounds
##Make a new column with the sum of the first three "C" columns
#LOBdata <- mutate(LOBdata, ConfInt=sum(C1, C1x, C2a))
LOBdata <- filter(LOBdata, C1==1)
#Read in the data
LOBdata <- read.csv("~/Desktop/LOBsetPos.csv")
# Get rid of low-confidence compounds
##Make a new column with the sum of the first three "C" columns
#LOBdata <- mutate(LOBdata, ConfInt=sum(C1, C1x, C2a))
LOBdata <- filter(LOBdata, C1==1)
View(LOBdata)
?mutate
# Get rid of low-confidence compounds
##Make a new column with the sum of the first three "C" columns
LOBdata <- mutate(LOBdata, ConfInt=sum(C1))
View(LOBdata)
LOBdata <- filter(LOBdata, C1==1 || C1x==1 || C2a==1)
#Read in the data
LOBdata <- read.csv("~/Desktop/LOBsetPos.csv")
LOBdata <- filter(LOBdata, C1==1 || C1x==1 || C2a==1)
# Get rid of low-confidence compounds
##Make a new column with the sum of the first three "C" columns
ConfVals <- select(LOBdata, c(C1, C1x, C2a))
#Read in the data
LOBdata <- read.csv("~/Desktop/LOBsetPos.csv")
# Get rid of low-confidence compounds
##Make a new column with the sum of the first three "C" columns
ConfVals <- select(LOBdata, c(C1, C1x, C2a))
View(ConfVals)
LOBRowSums <- rowSums(ConfVals)
LOBdata$ConfVals <- LOBRowSums
View(LOBdata)
LOBdata <- filter(LOBdata, ConfVals==1)
names(LOBdata)
sumLOBdata <- select(LOBdata, 12:29)
View(sumLOBdata)
LOBRowSums <- rowSums(sumLOBdata)
LOBdata$HowMuch <- LOBRowSums
group_by(LOBdata, lipid_class)
summarize(group_by(LOBdata, lipid_class), "ClassSum"=sum(HowMuch))
LOBdata %>%
group_by(., lipid_class) %>%
summarize(., "ClassSum"=sum(HowMuch))
classLOBdata <- LOBdata %>%
group_by(., lipid_class) %>%
summarize(., "ClassSum"=sum(HowMuch))
barplot(classLOBdata$ClassSum)
ggplot() + geom_bar(data = classLOBdata, aes(y=ClassSum))
library(ggplot2)
ggplot() + geom_bar(data = classLOBdata, aes(y=ClassSum))
ggplot() + geom_bar(data = classLOBdata, aes(y=ClassSum), stat = "identity")
ggplot() + geom_bar(data = classLOBdata,
aes(x=1:9, y=ClassSum), stat = "identity")
classLOBdata <- LOBdata %>%
group_by(., lipid_class, species) %>%
summarize(., "ClassSum"=sum(HowMuch))
View(classLOBdata)
barplot(classLOBdata$ClassSum)
ggplot() +
geom_bar(data = classLOBdata,
aes(x=1:9, y=ClassSum), stat = "identity") +
facet_wrap(~species)
View(classLOBdata)
ggplot() +
geom_bar(data = classLOBdata,
aes(x=1:44, y=ClassSum), stat = "identity") +
facet_wrap(~species)
ggplot() +
geom_bar(data = classLOBdata,
aes(y=ClassSum), stat = "identity") +
facet_wrap(~species)
View(classLOBdata)
ggplot() +
geom_point(data = classLOBdata,
aes(x=lipid_class y=ClassSum), stat = "identity") +
facet_wrap(~species)
ggplot() +
geom_point(data = classLOBdata,
aes(x=lipid_class, y=ClassSum), stat = "identity") +
facet_wrap(~species)
ggplot() +
geom_point(data = classLOBdata,
aes(x=species, y=ClassSum), stat = "identity") +
facet_wrap(~lipid_class)
ggplot() +
geom_bar(data = classLOBdata,
aes(x=species, y=ClassSum), stat = "identity") +
facet_wrap(~lipid_class)
ggplot() +
geom_bar(data = classLOBdata,
aes(x=species, y=ClassSum))#, stat = "identity") +
ggplot() +
geom_bar(data = classLOBdata,
aes(x=species, y=ClassSum), stat = "identity") +
facet_wrap(~lipid_class)
ggplot() +
geom_bar(data = classLOBdata,
aes(x=species, y=ClassSum), stat = "identity") +
facet_wrap(~lipid_class, scales = "free")
barplot(LOBdata$ConfVals)
ConfVals <- select(LOBdata, c(C1, C1x, C2a))
LOBRowSums <- rowSums(ConfVals)
LOBdata$ConfVals <- LOBRowSums
barplot(LOBdata$ConfVals)
barplot(classLOBdata$)
barplot(classLOBdata$ClassSum)
barplot(classLOBdata$ClassSum, names.arg = classLOBdata$lipid_class)
classLOBdata <- LOBdata %>%
group_by(., lipid_class) %>%
summarize(., "ClassSum"=sum(HowMuch))
barplot(classLOBdata$ClassSum, names.arg = classLOBdata$lipid_class)
barplot(classLOBdata$ClassSum, names.arg = classLOBdata$lipid_class, las=3)
View(classLOBdata)
names(LOBdata)
ggplot() + geom_point(aes(LOBdata, x=peakgroup_rt, y=peakgroup_mz, color=lipid_class))
ggplot() +
geom_point(aes(LOBdata, x="peakgroup_rt", y="peakgroup_mz", color="lipid_class"))
ggplot() +
geom_point(data=LOBdata, aes(x=peakgroup_rt, y=peakgroup_mz, color=lipid_class))
ggplot() +
geom_point(data=LOBdata, aes(x=peakgroup_rt, y=peakgroup_mz, color=species)) +
facet_wrap(~lipid_class)
classLOBdata <- LOBdata %>%
group_by(., lipid_class, species) %>%
summarize(., "ClassSum"=sum(HowMuch))
list.files()
ls()
source('~/Desktop/Elab/GitHub Things/SavioBridge/DYEatoms/LOBset_Cleaning.R', echo=TRUE)
head(complete_LOBset_pos)
head(complete_LOBset_neg)
source('~/Desktop/Elab/GitHub Things/SavioBridge/DYEatoms/LOBset_Cleaning.R', echo=TRUE)
df <- data.frame("Col1"=letters, "Col2"=paste0(letters, (1:26)*10))
df
df <- data.frame("Col1"=letters, "Col2"=paste0(letters, (1:26)*10),
s1 = rnorm(26, mean = 5), s2=rnorm(26, mean = 50), s3=rnorm(26, mean=500))
df
library(reshape2)
library(dplyr)
long_df <- melt(df, id=c("Col1", "Col2"), value.name = "Intensity", variable.name = "Sample")
long_df
norm_df <- long_df %>%
group_by(Sample) %>%
summarize("Amt"=mean(Intensity))
norm_df
norm_df <- long_df %>%
group_by(Sample) %>%
summarize("Amt"=mean(Intensity)) %>%
mutate("NormInt"=Intensity*Amt)
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=mean(Intensity)*Intensity)
norm_df
tail(norm_df)
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=(1/max(Intensity))*Intensity)
norm_df
tail(norm_df)
View(norm_df)
df
mutate("NormInt"=(Intensity*mean(Intensity))
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=(Intensity*mean(Intensity))
)
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=(Intensity*mean(Intensity)))
norm_df
tail(norm_df)
slice(norm_df, grep("z", Col1))
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=(Intensity*slice(norm_df, grep("z", Col1))))
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=(Intensity*slice(., grep("z", Col1))))
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=(Intensity*slice(grep("z", Col1))))
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=(Intensity*slice(grep("z", .$Col1))))
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=Intensity*mean(Intensity))
norm_df
slice(norm_df, grep("z", Col1))
norm_df %>%
group_by(Sample) %>%
slice(norm_df, grep("z", Col1))
norm_df %>%
group_by(Sample) %>%
slice(., grep("z", Col1))
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=Intensity*pull(slice(., grep("z", Col1)), Intensity))
norm_df
long_df %>%
pull(slice(., grep("z", Col1)), Intensity)
long_df %>%
pull(slice(., grep("z", Col1)), Intensity)
pull(long_df, Intensity)
long_df %>%
pull(., slice(., grep("z", Col1)), Intensity)
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=Intensity/mean(Intensity))
norm_df
DNPPE <- slice(norm_df, Col1=="z")
DNPPE
DNPPE <- slice(norm_df, Col1=="a")
DNPPE
DNPPE <- slice(long_df, Col1=="a")
DNPPE
DNPPE <- slice(long_df, Col1=="z")
DNPPE
long_df$Col1=="z"
DNPPE <- filter(long_df, Col1=="z")
DNPPE
DNPPE <- filter(long_df, Col1=="z") %>%
mutate("Norm_factor"=max(Intensity)/Intensity)
DNPPE
max_DNPPE <- long_df %>%
filter(Col1=="z") %>%
pull(Intensity) %>%
max()
max_DNPPE
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=Intensity*(pull(filter(Col1=="z"), Intensity)/max_DNPPE))
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=Intensity*(pull(filter(., Col1=="z"), Intensity)/max_DNPPE))
pull(filter(long_df, Col1=="z"), Intensity)
norm_df
pull(filter(long_df, Col1=="z"), Intensity)/max_DNPPE
norm_df <- long_df %>% pull(filter(., Col1=="z"), Intensity)
norm_df <- long_df %>% pull(., filter(., Col1=="z"), Intensity)
norm_df <- long_df %>%
pull(filter(., Col1=="z"), Intensity)
DNPPEs <- filter(long_df, Col1=="z")
DNPPEs
max_DNPPE <- max(DNPPEs$Intensity)
norm_factor <- max_DNPPE/DNPPEs$Intensity
norm_factor
long_df %>%
group_by(Sample) %>%
n()
long_df %>%
group_by(Sample) %>%
n(.)
n(long_df)
?n
long_df %>%
group_by(Sample) %>%
summarize(length(Col1))
rep("a", "b", "c", 1:3)
length(df$Col1)
norm_factor <- rep(norm_factor, each=length(df$Col1))
norm_factor
norm_df <- long_df %>%
group_by(Sample) %>%
mutate("NormInt"=Intensity*norm_factor)
norm_df <- long_df %>%
mutate("NormInt"=Intensity*norm_factor)
norm_df
df <- data.frame("Col1"=letters, "Col2"=paste0(letters, (1:26)*10),
s1 = rnorm(26, mean = 5), s2=rnorm(26, mean = 50), s3=rnorm(26, mean=500))
long_df <- melt(df, id=c("Col1", "Col2"), value.name = "Intensity", variable.name = "Sample")
DNPPEs <- filter(long_df, Col1=="z")
max_DNPPE <- max(DNPPEs$Intensity)
norm_factor <- max_DNPPE/DNPPEs$Intensity
norm_factor <- rep(norm_factor, each=length(df$Col1))
norm_df <- long_df %>%
mutate("NormInt"=Intensity*norm_factor)
norm_df
#Tell R where you are and where the data is
#You may have to change this depending on where the .csv file is found
setwd("~/Desktop/Elab/GitHub Things/SavioBridge/DYEatoms")
#Read the data in and save it as the variable "LOBset"
LOBset <- read.csv("QuickDYE_Pos.csv")
#Check that it loaded properly by looking at the first 6 rows
head(LOBset)
num_compounds <- dim(LOBset)[1]
#Grab all the column names that have "Orbi" in them
col_names <- names(LOBset)
sample_cols <- grep("Orbi", col_names, value = T)
#Make a vector with all the column names in it
cols_to_keep <- c(
"peakgroup_mz",
"peakgroup_rt",
"compound_name",
"species",
"lipid_class",
sample_cols
)
#And grab them
simple_LOBset <- select(LOBset, cols_to_keep)
#Make sure we got what we expected
head(simple_LOBset)
#Rename the first 5 columns to something more descriptive
names(simple_LOBset)[1:5] <- c("m/z", "RT", "compound_name", "lipid_species", "lipid_class")
head(simple_LOBset)
# Step 3: Put the data in long format ----
long_LOBset <- melt(simple_LOBset, id=c("m/z", "RT", "compound_name", "lipid_species", "lipid_class"),
value.name = "intensity", variable.name = "sample")
#Check that we got what we wanted
head(long_LOBset)
DNPPEs <- filter(long_LOBset, compound_name=="DNPPE")
DNPPEs
max_DNPPE <- max(DNPPEs$intensity)
norm_factor <- max_DNPPE/DNPPEs$intensity
norm_factor
DNPPEs <- filter(long_LOBset, compound_name=="DNPPE"&RT>800)
DNPPEs
max_DNPPE <- max(DNPPEs$intensity)
norm_factor <- max_DNPPE/DNPPEs$intensity
norm_factor <- rep(norm_factor, each=num_compounds)
norm_factor
tail(norm_factor)
norm_LOBset <- long_LOBset %>%
mutate("NormInt"=intensity*norm_factor)
head(norm_LOBset)
norm_LOBset <- long_LOBset %>%
mutate("intensity"=intensity*norm_factor)
#Make a new column called "treatment"
#The first two samples are controls (1129 and 1130), the next 3 are +NP,
treatments <- c("Control", "Control", "+NP", "+NP", "+NP", "+NPSi", "+NPSi", "+NPSi")
treatment_col <- rep(treatments, each=num_compounds)
full_LOBset <- mutate(norm_LOBset, "treatment"=treatment_col)
# Step 5: Append a column denoting the polarity ----
complete_LOBset_pos <- mutate(full_LOBset, polarity="positive")
source('~/Desktop/Elab/GitHub Things/SavioBridge/DYEatoms/LOBset_Cleaning.R', echo=TRUE)
head(complete_LOBset)
filter(complete_LOBset, compound_name=="DNPPE")
